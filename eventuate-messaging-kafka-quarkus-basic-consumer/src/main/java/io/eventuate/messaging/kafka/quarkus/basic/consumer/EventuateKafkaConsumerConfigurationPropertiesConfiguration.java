package io.eventuate.messaging.kafka.quarkus.basic.consumer;

import io.eventuate.messaging.kafka.basic.consumer.EventuateKafkaConsumerConfigurationProperties;

import javax.inject.Singleton;

@Singleton
public class EventuateKafkaConsumerConfigurationPropertiesConfiguration {
  @Singleton
  public EventuateKafkaConsumerConfigurationProperties eventuateKafkaConsumerConfigurationProperties(EventuateKafkaConsumerQuarkusConfigurationProperties eventuateKafkaConsumerQuarkusConfigurationProperties) {
    EventuateKafkaConsumerConfigurationProperties eventuateKafkaConsumerConfigurationProperties = new EventuateKafkaConsumerConfigurationProperties(eventuateKafkaConsumerQuarkusConfigurationProperties.getPropertiesAsMap());
    eventuateKafkaConsumerConfigurationProperties.setBackPressure(eventuateKafkaConsumerQuarkusConfigurationProperties.getBackPressure().toBackPressureConfig());
    eventuateKafkaConsumerConfigurationProperties.setPollTimeout(eventuateKafkaConsumerQuarkusConfigurationProperties.getPollTimeout());
    return eventuateKafkaConsumerConfigurationProperties;
  }

}
